{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhinav\\\\Desktop\\\\snakegame\\\\snakegame\\\\src\\\\game.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './game.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [snake, setSnake] = useState([{\n    x: 90,\n    y: 30\n  }, {\n    x: 60,\n    y: 30\n  }, {\n    x: 30,\n    y: 30\n  }]);\n  const [direction, setDirection] = useState('R');\n  const [updateInterval, setUpdateInterval] = useState(400);\n  const [TX, setTX] = useState(Math.floor(Math.random() * 470 / 30) * 30);\n  const [TY, setTY] = useState(Math.floor(Math.random() * 470 / 30) * 30);\n  const [gameover, setgameover] = useState(false);\n  const [score, setscore] = useState(0);\n  const [difficulty, setdifficulty] = useState(.9);\n  useEffect(() => {\n    if (!gameover) {\n      const interval = setInterval(() => {\n        setSnake(prevSnake => {\n          // movement logic\n          let newsnake = [...prevSnake];\n          newsnake.pop();\n          switch (direction) {\n            case 'R':\n              newsnake.unshift({\n                x: prevSnake[0].x + 30,\n                y: prevSnake[0].y\n              });\n              break;\n            case 'L':\n              newsnake.unshift({\n                x: prevSnake[0].x - 30,\n                y: prevSnake[0].y\n              });\n              break;\n            case 'U':\n              newsnake.unshift({\n                x: prevSnake[0].x,\n                y: prevSnake[0].y - 30\n              });\n              break;\n            case 'D':\n              newsnake.unshift({\n                x: prevSnake[0].x,\n                y: prevSnake[0].y + 30\n              });\n              break;\n            default:\n              break;\n          }\n          //gameover on snake hitting itself\n          for (var i = 1; i < newsnake.length; i++) {\n            if (newsnake[0].x == newsnake[i].x && newsnake[0].y == newsnake[i].y) {\n              setgameover(true);\n              clearInterval(interval);\n            }\n          }\n          // snake getting a point logic\n          if (Math.abs(TX - newsnake[0].x) == 0 && Math.abs(TY - newsnake[0].y) == 0) {\n            setTX(Math.floor(Math.random() * 470 / 30) * 30);\n            setTY(Math.floor(Math.random() * 470 / 30) * 30);\n            setUpdateInterval(previnterval => previnterval * .5);\n            setscore(score => score + 1);\n            switch (newsnake[newsnake.length - 2].x - newsnake[newsnake.length - 1].x) {\n              case 30:\n                newsnake.push({\n                  x: newsnake[newsnake.length - 1].x - 30,\n                  y: newsnake[newsnake.length - 1].y\n                });\n                break;\n              case -30:\n                newsnake.push({\n                  x: newsnake[newsnake.length - 1].x + 30,\n                  y: newsnake[newsnake.length - 1].y\n                });\n                break;\n              case 0:\n                if (newsnake[newsnake.length - 2].y - newsnake[newsnake.length - 1].y == -30) newsnake.push({\n                  x: newsnake[newsnake.length - 1].x,\n                  y: newsnake[newsnake.length - 1].y + 30\n                });else if (newsnake[newsnake.length - 2].y - newsnake[newsnake.length - 1].y == 30) newsnake.push({\n                  x: newsnake[newsnake.length - 1].x,\n                  y: newsnake[newsnake.length - 1].y - 30\n                });\n                break;\n              default:\n                break;\n            }\n          }\n          console.log(newsnake[0].x);\n          // gameover on hitting boundaries\n          if (newsnake[0].x < 0 || newsnake[0].x > 470) {\n            setgameover(true);\n            clearInterval(interval);\n          }\n          if (newsnake[0].y < 0 || newsnake[0].y > 470) {\n            setgameover(true);\n            clearInterval(interval);\n          }\n          return newsnake;\n        });\n      }, updateInterval);\n      return () => clearInterval(interval);\n    }\n    //  Cleanup interval\n  }, [direction, updateInterval]);\n\n  // Correct Key Event Listener Logic\n  useEffect(() => {\n    const handleKeyDown = e => {\n      switch (e.code) {\n        case 'ArrowUp':\n          setDirection('U');\n          break;\n        case 'ArrowDown':\n          setDirection('D');\n          break;\n        case 'ArrowLeft':\n          setDirection('L');\n          break;\n        case 'ArrowRight':\n          setDirection('R');\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown); //  Proper cleanup\n    };\n  }, []); // Only runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"gamepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"score\",\n      children: [\"score:\", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), gameover && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gameoverpage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"gameoverpopup\",\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"replaybutton\",\n        onClick: () => {\n          window.location.reload();\n        },\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"quit\",\n          children: \"Quit because you're a fat loser \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"box\",\n      children: [snake.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"snakeelement\",\n        style: {\n          left: `${element.x}px`,\n          top: `${element.y}px`\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"target\",\n        style: {\n          left: `${TX}px`,\n          top: `${TY}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"HVntyLz0LoCECvHfTH+e+y6r6NM=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","useEffect","Link","jsxDEV","_jsxDEV","Game","_s","snake","setSnake","x","y","direction","setDirection","updateInterval","setUpdateInterval","TX","setTX","Math","floor","random","TY","setTY","gameover","setgameover","score","setscore","difficulty","setdifficulty","interval","setInterval","prevSnake","newsnake","pop","unshift","i","length","clearInterval","abs","previnterval","push","console","log","handleKeyDown","e","code","window","addEventListener","removeEventListener","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","to","map","element","index","className","style","left","top","_c","$RefreshReg$"],"sources":["C:/Users/Abhinav/Desktop/snakegame/snakegame/src/game.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './game.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Game = () => {\r\n    const [snake, setSnake] = useState([{ x: 90, y: 30 }, { x: 60, y: 30 }, { x: 30, y: 30 }]);\r\n    const [direction, setDirection] = useState('R');\r\n    const [updateInterval, setUpdateInterval] = useState(400);\r\n    const[TX,setTX]=useState(Math.floor((Math.random()*470)/30)*30);\r\n    const[TY,setTY]=useState(Math.floor((Math.random()*470)/30)*30);\r\n    const[gameover,setgameover]=useState(false);\r\n    const[score,setscore]=useState(0);\r\n    const[difficulty,setdifficulty]=useState(.9);\r\n\r\n\r\n    useEffect(() => {\r\n        if(!gameover){\r\n            const interval = setInterval(() => {\r\n                setSnake((prevSnake) => {\r\n                    // movement logic\r\n                    let newsnake = [...prevSnake];\r\n                    newsnake.pop();\r\n                    switch (direction) {\r\n                        case 'R':\r\n                            newsnake.unshift({ x: prevSnake[0].x + 30, y: prevSnake[0].y });\r\n                            break;\r\n                        case 'L':\r\n                            newsnake.unshift({ x: prevSnake[0].x - 30, y: prevSnake[0].y });\r\n                            break;\r\n                        case 'U':\r\n                            newsnake.unshift({ x: prevSnake[0].x, y: prevSnake[0].y - 30 });\r\n                            break;\r\n                        case 'D':\r\n                            newsnake.unshift({ x: prevSnake[0].x, y: prevSnake[0].y + 30 });\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    //gameover on snake hitting itself\r\n                    for(var i=1; i<newsnake.length; i++){\r\n                        if(newsnake[0].x==newsnake[i].x&&newsnake[0].y==newsnake[i].y){\r\n                            setgameover(true);\r\n                            clearInterval(interval);\r\n                        }\r\n                    }\r\n                    // snake getting a point logic\r\n                    if(Math.abs(TX-newsnake[0].x)==0&&Math.abs(TY-newsnake[0].y)==0){\r\n                        setTX(Math.floor((Math.random()*470)/30)*30);\r\n                        setTY(Math.floor((Math.random()*470)/30)*30);\r\n                        setUpdateInterval((previnterval)=>previnterval*.5);\r\n                        setscore((score)=>score+1);\r\n                        switch (newsnake[newsnake.length-2].x-newsnake[newsnake.length-1].x) {\r\n                            case 30:\r\n                                newsnake.push({x:newsnake[newsnake.length-1].x-30,y:newsnake[newsnake.length-1].y})\r\n                                break;\r\n                            case -30:\r\n                                newsnake.push({x:newsnake[newsnake.length-1].x+30,y:newsnake[newsnake.length-1].y})\r\n                            break;\r\n                            case 0:\r\n                              if(newsnake[newsnake.length-2].y-newsnake[newsnake.length-1].y==-30)\r\n                                newsnake.push({x:newsnake[newsnake.length-1].x,y:newsnake[newsnake.length-1].y+30});\r\n                              else if(newsnake[newsnake.length-2].y-newsnake[newsnake.length-1].y==30)\r\n                                newsnake.push({x:newsnake[newsnake.length-1].x,y:newsnake[newsnake.length-1].y-30});\r\n                            break;\r\n                        \r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                    console.log(newsnake[0].x)\r\n                    // gameover on hitting boundaries\r\n                    if(newsnake[0].x<0||newsnake[0].x>470){setgameover(true); clearInterval(interval);}\r\n                    if(newsnake[0].y<0||newsnake[0].y>470){setgameover(true); clearInterval(interval);}\r\n                    return newsnake;\r\n                });\r\n            }, updateInterval);\r\n    \r\n            return () => clearInterval(interval);\r\n        }\r\n          //  Cleanup interval\r\n    }, [direction, updateInterval]);\r\n\r\n    // Correct Key Event Listener Logic\r\n    useEffect(() => {\r\n            const handleKeyDown = (e) => {\r\n                switch (e.code) {\r\n                    case 'ArrowUp':\r\n                        setDirection('U');\r\n                        break;\r\n                    case 'ArrowDown':\r\n                        setDirection('D');\r\n                        break;\r\n                    case 'ArrowLeft':\r\n                        setDirection('L');\r\n                        break;\r\n                    case 'ArrowRight':\r\n                        setDirection('R');\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            };\r\n            window.addEventListener('keydown', handleKeyDown);\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);  //  Proper cleanup\r\n        };\r\n    },[]);  // Only runs once on mount\r\n\r\n\r\n    return (\r\n        <div id=\"gamepage\">\r\n        <div id=\"score\">score:{score}</div>\r\n        {gameover&&<div id=\"gameoverpage\">\r\n            <div id=\"gameoverpopup\">Game Over</div>\r\n            <div id=\"replaybutton\" onClick={()=>{window.location.reload()}}>Restart</div>\r\n         <Link to=\"/\"><div id=\"quit\">Quit because you're a fat loser </div></Link>\r\n        </div>}\r\n            <div id=\"box\">\r\n                {snake.map((element, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className=\"snakeelement\"\r\n                        style={{ left: `${element.x}px`, top: `${element.y}px` }}\r\n                    ></div>\r\n                ))}\r\n                <div id=\"target\" style={{left:`${TX}px`,top:`${TY}px`}} ></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}