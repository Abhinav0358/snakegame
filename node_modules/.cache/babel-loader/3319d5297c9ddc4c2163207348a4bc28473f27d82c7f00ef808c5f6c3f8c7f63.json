{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhinav\\\\Desktop\\\\snakegame\\\\snakegame\\\\src\\\\game.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [snake, setSnake] = useState([{\n    x: 90,\n    y: 30\n  }, {\n    x: 60,\n    y: 30\n  }, {\n    x: 30,\n    y: 30\n  }]);\n  const [direction, setDirection] = useState('R');\n  const [updateInterval, setUpdateInterval] = useState(400);\n  const [TX, setTX] = useState(Math.random() * 470);\n  const [TY, setTY] = useState(Math.random() * 470);\n  const [gameover, setgameover] = useState(false);\n\n  // Snake movement logic inside useEffect with proper cleanup\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSnake(prevSnake => {\n        let newsnake = [...prevSnake];\n        newsnake.pop();\n        switch (direction) {\n          case 'R':\n            newsnake.unshift({\n              x: prevSnake[0].x + 30,\n              y: prevSnake[0].y\n            });\n            break;\n          case 'L':\n            newsnake.unshift({\n              x: prevSnake[0].x - 30,\n              y: prevSnake[0].y\n            });\n            break;\n          case 'U':\n            newsnake.unshift({\n              x: prevSnake[0].x,\n              y: prevSnake[0].y - 30\n            });\n            break;\n          case 'D':\n            newsnake.unshift({\n              x: prevSnake[0].x,\n              y: prevSnake[0].y + 30\n            });\n            break;\n          default:\n            break;\n        }\n        if (Math.abs(TX - newsnake[0].x) < 30 && Math.abs(TY - newsnake[0].y) < 30) {\n          setTX(Math.random() * 470);\n          setTY(Math.random() * 470);\n          switch (newsnake[newsnake.length - 2].x - newsnake[newsnake.length - 1].x) {\n            case 30:\n              newsnake.push({\n                x: newsnake[newsnake.length - 1].x - 30,\n                y: newsnake[newsnake.length - 1].y\n              });\n              break;\n            case -30:\n              newsnake.push({\n                x: newsnake[newsnake.length - 1].x + 30,\n                y: newsnake[newsnake.length - 1].y\n              });\n              break;\n            case 0:\n              if (newsnake[newsnake.length - 2].y - newsnake[newsnake.length - 1].y == -30) newsnake.push({\n                x: newsnake[newsnake.length - 1].x,\n                y: newsnake[newsnake.length - 1].y + 30\n              });else if (newsnake[newsnake.length - 2].y - newsnake[newsnake.length - 1].y == 30) newsnake.push({\n                x: newsnake[newsnake.length - 1].x,\n                y: newsnake[newsnake.length - 1].y - 30\n              });\n              break;\n            default:\n              break;\n          }\n        }\n        console.log(newsnake[0].x);\n        if (newsnake[0].x < 0 || newsnake[0].x > 470) {\n          setgameover(true);\n          clearInterval(interval);\n          window.removeEventListener('keydown', handleKeyDown);\n        }\n        if (newsnake[0].y < 0 || newsnake[0].y > 470) {\n          setgameover(true);\n          clearInterval(interval);\n          window.removeEventListener('keydown', handleKeyDown);\n        }\n        return newsnake;\n      });\n    }, updateInterval);\n    return () => clearInterval(interval); //  Cleanup interval\n  }, [direction, updateInterval]);\n\n  // Correct Key Event Listener Logic\n  useEffect(() => {\n    const handleKeyDown = e => {\n      switch (e.code) {\n        case 'ArrowUp':\n          setDirection('U');\n          break;\n        case 'ArrowDown':\n          setDirection('D');\n          break;\n        case 'ArrowLeft':\n          setDirection('L');\n          break;\n        case 'ArrowRight':\n          setDirection('R');\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown); //  Proper cleanup\n    };\n  }, []); // Only runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"gamepage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"box\",\n      children: [snake.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"snakeelement\",\n        style: {\n          left: `${element.x}px`,\n          top: `${element.y}px`\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"target\",\n        style: {\n          left: `${TX}px`,\n          top: `${TY}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"1ZlU4DxtOsnYfDJAK5pjwwJpgzY=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Game","_s","snake","setSnake","x","y","direction","setDirection","updateInterval","setUpdateInterval","TX","setTX","Math","random","TY","setTY","gameover","setgameover","interval","setInterval","prevSnake","newsnake","pop","unshift","abs","length","push","console","log","clearInterval","window","removeEventListener","handleKeyDown","e","code","addEventListener","id","children","map","element","index","className","style","left","top","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Abhinav/Desktop/snakegame/snakegame/src/game.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './game.css';\r\n\r\nconst Game = () => {\r\n    const [snake, setSnake] = useState([{ x: 90, y: 30 }, { x: 60, y: 30 }, { x: 30, y: 30 }]);\r\n    const [direction, setDirection] = useState('R');\r\n    const [updateInterval, setUpdateInterval] = useState(400);\r\n    const[TX,setTX]=useState(Math.random()*470);\r\n    const[TY,setTY]=useState(Math.random()*470);\r\n    const[gameover,setgameover]=useState(false);\r\n\r\n    // Snake movement logic inside useEffect with proper cleanup\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setSnake((prevSnake) => {\r\n                let newsnake = [...prevSnake];\r\n                newsnake.pop();\r\n\r\n                switch (direction) {\r\n                    case 'R':\r\n                        newsnake.unshift({ x: prevSnake[0].x + 30, y: prevSnake[0].y });\r\n                        break;\r\n                    case 'L':\r\n                        newsnake.unshift({ x: prevSnake[0].x - 30, y: prevSnake[0].y });\r\n                        break;\r\n                    case 'U':\r\n                        newsnake.unshift({ x: prevSnake[0].x, y: prevSnake[0].y - 30 });\r\n                        break;\r\n                    case 'D':\r\n                        newsnake.unshift({ x: prevSnake[0].x, y: prevSnake[0].y + 30 });\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                if(Math.abs(TX-newsnake[0].x)<30&&Math.abs(TY-newsnake[0].y)<30){\r\n                    setTX(Math.random()*470);\r\n                    setTY(Math.random()*470);\r\n                    switch (newsnake[newsnake.length-2].x-newsnake[newsnake.length-1].x) {\r\n                        case 30:\r\n                            newsnake.push({x:newsnake[newsnake.length-1].x-30,y:newsnake[newsnake.length-1].y})\r\n                            break;\r\n                        case -30:\r\n                            newsnake.push({x:newsnake[newsnake.length-1].x+30,y:newsnake[newsnake.length-1].y})\r\n                        break;\r\n                        case 0:\r\n                          if(newsnake[newsnake.length-2].y-newsnake[newsnake.length-1].y==-30)\r\n                            newsnake.push({x:newsnake[newsnake.length-1].x,y:newsnake[newsnake.length-1].y+30});\r\n                          else if(newsnake[newsnake.length-2].y-newsnake[newsnake.length-1].y==30)\r\n                            newsnake.push({x:newsnake[newsnake.length-1].x,y:newsnake[newsnake.length-1].y-30});\r\n                        break;\r\n                    \r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                console.log(newsnake[0].x)\r\n                if(newsnake[0].x<0||newsnake[0].x>470){setgameover(true); clearInterval(interval);window.removeEventListener('keydown', handleKeyDown);}\r\n                if(newsnake[0].y<0||newsnake[0].y>470){setgameover(true); clearInterval(interval);window.removeEventListener('keydown', handleKeyDown);}\r\n                return newsnake;\r\n            });\r\n        }, updateInterval);\r\n\r\n        return () => clearInterval(interval);  //  Cleanup interval\r\n    }, [direction, updateInterval]);\r\n\r\n    // Correct Key Event Listener Logic\r\n    useEffect(() => {\r\n        const handleKeyDown = (e) => {\r\n            switch (e.code) {\r\n                case 'ArrowUp':\r\n                    setDirection('U');\r\n                    break;\r\n                case 'ArrowDown':\r\n                    setDirection('D');\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    setDirection('L');\r\n                    break;\r\n                case 'ArrowRight':\r\n                    setDirection('R');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);  //  Proper cleanup\r\n        };\r\n    }, []);  // Only runs once on mount\r\n\r\n    return (\r\n        <div id=\"gamepage\">\r\n            <div id=\"box\">\r\n                {snake.map((element, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className=\"snakeelement\"\r\n                        style={{ left: `${element.x}px`, top: `${element.y}px` }}\r\n                    ></div>\r\n                ))}\r\n                <div id=\"target\" style={{left:`${TX}px`,top:`${TY}px`}} ></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}