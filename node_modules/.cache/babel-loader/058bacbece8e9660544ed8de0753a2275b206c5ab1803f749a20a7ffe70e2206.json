{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhinav\\\\Desktop\\\\snakegame\\\\snakegame\\\\src\\\\game.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport './game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [snake, setsnake] = useState([{\n    x: 90,\n    y: 30\n  }, {\n    x: 60,\n    y: 30\n  }, {\n    x: 30,\n    y: 30\n  }]);\n  const [direction, setdirection] = useState('R');\n  const [updateinterval, setupdateinterval] = useState(500);\n  setInterval(() => {\n    let newsnake = [...snake];\n    newsnake.pop();\n    switch (direction) {\n      case 'R':\n        newsnake.unshift({\n          x: snake.x + 30,\n          y: snake.y\n        });\n        break;\n      case 'L':\n        newsnake.unshift({\n          x: snake.x - 30,\n          y: snake.y\n        });\n        break;\n      case 'U':\n        newsnake.unshift({\n          x: snake.x,\n          y: snake.y + 30\n        });\n        break;\n      case 'D':\n        newsnake.unshift({\n          x: snake.x,\n          y: snake.y - 30\n        });\n        break;\n      default:\n        break;\n    }\n  }, updateinterval);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"gamepage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"box\",\n      children: snake.map(element => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snakeelement\",\n          style: {\n            left: `${element.x}px`,\n            top: `${element.y}px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"opZ+9X2/Q0abTwvPxdvomaYXrCM=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Game","_s","snake","setsnake","x","y","direction","setdirection","updateinterval","setupdateinterval","setInterval","newsnake","pop","unshift","id","children","map","element","className","style","left","top","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Abhinav/Desktop/snakegame/snakegame/src/game.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport './game.css'\r\nconst Game = () => {\r\n    const[snake,setsnake]=useState([{x:90,y:30},{x:60,y:30},{x:30,y:30}])\r\n    const[direction,setdirection]=useState('R');\r\n    const[updateinterval,setupdateinterval]=useState(500);\r\n    \r\n    setInterval(() => {\r\n        let newsnake=[...snake];\r\n        newsnake.pop();\r\n        switch (direction) {\r\n                case 'R':\r\n                newsnake.unshift({x:snake.x+30,y:snake.y})\r\n                break;\r\n                case 'L':\r\n                newsnake.unshift({x:snake.x-30,y:snake.y})\r\n                break;\r\n                case 'U':\r\n                newsnake.unshift({x:snake.x,y:snake.y+30}) \r\n                break;\r\n                case 'D':\r\n                newsnake.unshift({x:snake.x,y:snake.y-30})\r\n                break;\r\n                default:\r\n                break;\r\n        }\r\n    }, updateinterval);\r\n\r\n    return (  \r\n        <div id=\"gamepage\">\r\n            <div id=\"box\">\r\n             {snake.map((element)=>{\r\n               return <div className=\"snakeelement\" style={{left:`${element.x}px`,top:`${element.y}px`}}></div>\r\n             })}                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Game;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACnB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACP,QAAQ,CAAC,CAAC;IAACQ,CAAC,EAAC,EAAE;IAACC,CAAC,EAAC;EAAE,CAAC,EAAC;IAACD,CAAC,EAAC,EAAE;IAACC,CAAC,EAAC;EAAE,CAAC,EAAC;IAACD,CAAC,EAAC,EAAE;IAACC,CAAC,EAAC;EAAE,CAAC,CAAC,CAAC;EACrE,MAAK,CAACC,SAAS,EAACC,YAAY,CAAC,GAACX,QAAQ,CAAC,GAAG,CAAC;EAC3C,MAAK,CAACY,cAAc,EAACC,iBAAiB,CAAC,GAACb,QAAQ,CAAC,GAAG,CAAC;EAErDc,WAAW,CAAC,MAAM;IACd,IAAIC,QAAQ,GAAC,CAAC,GAAGT,KAAK,CAAC;IACvBS,QAAQ,CAACC,GAAG,CAAC,CAAC;IACd,QAAQN,SAAS;MACT,KAAK,GAAG;QACRK,QAAQ,CAACE,OAAO,CAAC;UAACT,CAAC,EAACF,KAAK,CAACE,CAAC,GAAC,EAAE;UAACC,CAAC,EAACH,KAAK,CAACG;QAAC,CAAC,CAAC;QAC1C;MACA,KAAK,GAAG;QACRM,QAAQ,CAACE,OAAO,CAAC;UAACT,CAAC,EAACF,KAAK,CAACE,CAAC,GAAC,EAAE;UAACC,CAAC,EAACH,KAAK,CAACG;QAAC,CAAC,CAAC;QAC1C;MACA,KAAK,GAAG;QACRM,QAAQ,CAACE,OAAO,CAAC;UAACT,CAAC,EAACF,KAAK,CAACE,CAAC;UAACC,CAAC,EAACH,KAAK,CAACG,CAAC,GAAC;QAAE,CAAC,CAAC;QAC1C;MACA,KAAK,GAAG;QACRM,QAAQ,CAACE,OAAO,CAAC;UAACT,CAAC,EAACF,KAAK,CAACE,CAAC;UAACC,CAAC,EAACH,KAAK,CAACG,CAAC,GAAC;QAAE,CAAC,CAAC;QAC1C;MACA;QACA;IACR;EACJ,CAAC,EAAEG,cAAc,CAAC;EAElB,oBACIT,OAAA;IAAKe,EAAE,EAAC,UAAU;IAAAC,QAAA,eACdhB,OAAA;MAAKe,EAAE,EAAC,KAAK;MAAAC,QAAA,EACXb,KAAK,CAACc,GAAG,CAAEC,OAAO,IAAG;QACpB,oBAAOlB,OAAA;UAAKmB,SAAS,EAAC,cAAc;UAACC,KAAK,EAAE;YAACC,IAAI,EAAC,GAAGH,OAAO,CAACb,CAAC,IAAI;YAACiB,GAAG,EAAC,GAAGJ,OAAO,CAACZ,CAAC;UAAI;QAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAClG,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAxB,EAAA,CAnCKD,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}