{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhinav\\\\Desktop\\\\snakegame\\\\snakegame\\\\src\\\\game.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [snake, setSnake] = useState([{\n    x: 90,\n    y: 30\n  }, {\n    x: 60,\n    y: 30\n  }, {\n    x: 30,\n    y: 30\n  }]);\n  const [direction, setDirection] = useState('R');\n  const [updateInterval, setUpdateInterval] = useState(1000);\n\n  // ✅ Snake movement logic inside useEffect with proper cleanup\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSnake(prevSnake => {\n        let newsnake = [...prevSnake];\n        newsnake.pop();\n        switch (direction) {\n          case 'R':\n            newsnake.unshift({\n              x: prevSnake[0].x + 30,\n              y: prevSnake[0].y\n            });\n            break;\n          case 'L':\n            newsnake.unshift({\n              x: prevSnake[0].x - 30,\n              y: prevSnake[0].y\n            });\n            break;\n          case 'U':\n            newsnake.unshift({\n              x: prevSnake[0].x,\n              y: prevSnake[0].y - 30\n            });\n            break;\n          case 'D':\n            newsnake.unshift({\n              x: prevSnake[0].x,\n              y: prevSnake[0].y + 30\n            });\n            break;\n          default:\n            break;\n        }\n        return newsnake;\n      });\n    }, updateInterval);\n    return () => clearInterval(interval); // ✅ Cleanup interval\n  }, [direction, updateInterval]);\n\n  // ✅ Correct Key Event Listener Logic\n  useEffect(() => {\n    const handleKeyDown = e => {\n      switch (e.code) {\n        case 'ArrowUp':\n          setDirection('U');\n          break;\n        case 'ArrowDown':\n          setDirection('D');\n          break;\n        case 'ArrowLeft':\n          setDirection('L');\n          break;\n        case 'ArrowRight':\n          setDirection('R');\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown); // ✅ Proper cleanup\n    };\n  }, []); // ✅ Only runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"gamepage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"box\",\n      children: snake.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"snakeelement\",\n        style: {\n          left: `${element.x}px`,\n          top: `${element.y}px`\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"QW3yneK9/rVwjwjZP6n9oIZEoZA=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Game","_s","snake","setSnake","x","y","direction","setDirection","updateInterval","setUpdateInterval","interval","setInterval","prevSnake","newsnake","pop","unshift","clearInterval","handleKeyDown","e","code","window","addEventListener","removeEventListener","id","children","map","element","index","className","style","left","top","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Abhinav/Desktop/snakegame/snakegame/src/game.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './game.css';\r\n\r\nconst Game = () => {\r\n    const [snake, setSnake] = useState([{ x: 90, y: 30 }, { x: 60, y: 30 }, { x: 30, y: 30 }]);\r\n    const [direction, setDirection] = useState('R');\r\n    const [updateInterval, setUpdateInterval] = useState(1000);\r\n\r\n    // ✅ Snake movement logic inside useEffect with proper cleanup\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setSnake((prevSnake) => {\r\n                let newsnake = [...prevSnake];\r\n                newsnake.pop();\r\n\r\n                switch (direction) {\r\n                    case 'R':\r\n                        newsnake.unshift({ x: prevSnake[0].x + 30, y: prevSnake[0].y });\r\n                        break;\r\n                    case 'L':\r\n                        newsnake.unshift({ x: prevSnake[0].x - 30, y: prevSnake[0].y });\r\n                        break;\r\n                    case 'U':\r\n                        newsnake.unshift({ x: prevSnake[0].x, y: prevSnake[0].y - 30 });\r\n                        break;\r\n                    case 'D':\r\n                        newsnake.unshift({ x: prevSnake[0].x, y: prevSnake[0].y + 30 });\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                return newsnake;\r\n            });\r\n        }, updateInterval);\r\n\r\n        return () => clearInterval(interval);  // ✅ Cleanup interval\r\n    }, [direction, updateInterval]);\r\n\r\n    // ✅ Correct Key Event Listener Logic\r\n    useEffect(() => {\r\n        const handleKeyDown = (e) => {\r\n            switch (e.code) {\r\n                case 'ArrowUp':\r\n                    setDirection('U');\r\n                    break;\r\n                case 'ArrowDown':\r\n                    setDirection('D');\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    setDirection('L');\r\n                    break;\r\n                case 'ArrowRight':\r\n                    setDirection('R');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);  // ✅ Proper cleanup\r\n        };\r\n    }, []);  // ✅ Only runs once on mount\r\n\r\n    return (\r\n        <div id=\"gamepage\">\r\n            <div id=\"box\">\r\n                {snake.map((element, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className=\"snakeelement\"\r\n                        style={{ left: `${element.x}px`, top: `${element.y}px` }}\r\n                    ></div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}